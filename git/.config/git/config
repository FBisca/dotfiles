# Git Configuration
# This is a shared, modular Git configuration that's safe to share publicly.

[core]
  excludesfile = ~/.config/git/gitignore.global
  whitespace = space-before-tab,-indent-with-non-tab,trailing-space
  trustctime = false
  precomposeunicode = false
  untrackedCache = true
  pager = delta
	editor = nvim

[init]
    defaultBranch = main

[push]
    default = simple
    followTags = true

[pull]
    rebase = true

[merge]
    conflictstyle = diff3
    tool = nvim

[diff]
    tool = nvim
    colorMoved = default

[color]
    ui = auto

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green

[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold

[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[alias]
  l = log --date-order --date=iso --graph --full-history -n 30 --pretty=format:'%x08%x09%C(auto)%h %C(cyan)%ar%Creset %C(auto)%aN%C(reset)%C(auto)%d %C(auto)%s'
  s = status -s
  d = diff
  di = "!d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
  p = pull --recurse-submodules
  c = clone --recursive
  ca = !git add -A && git commit -av
  go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"
  tags = tag -l
  please = push --force-with-lease
  branches = branch -a
  remotes = remote -v
  aliases = config --get-regexp alias
  amend = commit --amend --reuse-message=HEAD
  credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"
  reb = "!r() { git rebase -i HEAD~$1; }; r"
  retag = "!r() { git tag -d $1 && git push origin :refs/tags/$1 && git tag $1; }; r"
  fb = "!f() { git branch -a --contains $1; }; f"
  ft = "!f() { git describe --always --contains $1; }; f"
  fc = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short -S$1; }; f"
  fm = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short --grep=$1; }; f"
  dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"
  contributors = shortlog --summary --numbered
  all = "!f() { for dir in $(find . -type d -name .git); do repo=$(dirname \"$dir\"); echo \"\n>>> $repo\"; git -C \"$repo\" $@; done }; f"

[diff]
  renames = copies
  colorMoved = default

[merge]
  log = true
  conflictstyle = diff3

[pull]
  rebase = true

[push]
  default = simple
  followTags = true

[delta]
  navigate = true

[help]
  autocorrect = 0

[credential]
  helper = !gh auth git-credential

[includeIf "gitdir:~/dev/private/**"]
  path = ~/.config/git/private/config.local

[includeIf "gitdir:~/dev/cbh/**"]
  path = ~/.config/git/clipboard/config.local

